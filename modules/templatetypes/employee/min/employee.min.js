"use strict";angular.module("Employee").factory("EmployeeService",["SettingsCall",function(SettingsCall){var service={};return service.getDetail=function(token,id,callback){SettingsCall.process("type/get/"+id+"?access_token="+token,null,callback)},service.get=function(token,id,callback){SettingsCall.process("employee/get/"+id+"?access_token="+token,null,callback)},service.save=function(token,menuId,id,data,callback){SettingsCall.process("employee/add/"+menuId+"/"+id+"?access_token="+token,data,callback)},service.allResources=function(token,callback){SettingsCall.process("resource/get/employee/all?access_token="+token,null,callback)},service}]),angular.module("Employee").controller("EmployeeController",["$scope","$rootScope","$location","EmployeeService",function($scope,$rootScope,$location,EmployeeService){var id=$location.search().id;$scope.menuId=$location.search().menuId?$location.search().menuId:null,$scope.employeeId=$location.search().employeeId?$location.search().employeeId:null,$scope.resourceId=$location.search().resourceId?$location.search().resourceId:null,$scope.name="",$scope.resources=[],$scope.selected="Select a Employee",$scope.resource=null,$scope.pagination={},$scope.resourceCollapse=!1,$scope.id=id,$scope.loadPage=function(id){$scope.getAllResources(),id&&EmployeeService.getDetail($rootScope.globals.currentUser.access_token,id,function(response){response?response.error_description?"Access is denied"!==response.error_description&&($scope.error=response.error_description+". Please logout!"):response.type?($scope.type=response.type,$scope.resourceId&&($scope.type.resourceId=$scope.resourceId),angular.forEach($scope.type.details,function(detail){if("GBL_INPUT_DRP_TYPE"===detail.type){var n=detail.name.indexOf(":"),name=detail.name.substring(0,n),json=detail.name.substring(n+1,detail.name.length);detail.name=name,detail.dropdownvalues=JSON.parse(json),detail.value="no selection"}}),$scope.name=$scope.type.name,$scope.employeeId&&EmployeeService.get($rootScope.globals.currentUser.access_token,$scope.employeeId,function(response){response?response.error_description?$scope.error=response.error_description+". Please logout!":response.employee?($scope.employee=response.employee,angular.forEach($scope.employee.details,function(employee){angular.forEach($scope.type.details,function(detail){detail.id===employee.id&&(detail.value=employee.value)})}),$scope.type.resourceId=response.employee.resourceId,$scope.type.menuScopeIds=response.employee.menuScopeIds,$scope.dataLoading=!1):$scope.error="Invalid server response":$scope.error="Invalid server response"}),$scope.dataLoading=!1):$scope.error="Invalid server response":$scope.error="Invalid server response"})},$scope.dropboxResourceSelected=function(resource){$scope.selected=resource.fullname,$scope.resource=resource,$scope.resourceCollapse=!$scope.resourceCollapse},$scope.changeDiv=function(){$scope.resourceCollapse=!$scope.resourceCollapse},$scope.getAllResources=function(){EmployeeService.allResources($rootScope.globals.currentUser.access_token,function(response){response?response.error_description?$scope.error=response.error_description+". Please logout!":response.resources?($scope.resources=response.resources,$scope.pagination.viewby=5,$scope.pagination.totalItems=$scope.resources.length,$scope.pagination.currentPage=1,$scope.pagination.itemsPerPage=5,$scope.pagination.maxSize=5,angular.forEach($scope.resources,function(entry){entry.fullname=entry.firstName+" "+entry.surname}),$scope.dataLoading=!1):$scope.error="Invalid server response":$scope.error="Invalid server response"})},$scope.dropboxitemselected=function(item,detail){detail.value=item},$scope.openDatePickers=[],$scope.openCal=function($event,datePickerIndex){$event.preventDefault(),$event.stopPropagation(),$scope.openDatePickers[datePickerIndex]===!0?$scope.openDatePickers.length=0:($scope.openDatePickers.length=0,$scope.openDatePickers[datePickerIndex]=!0)},$scope.stripTrailing=function(str,trimStr){str.substr(0,1)===trimStr&&(str=str.substring(1));var len=str.length;return str.substr(len-1,1)===trimStr&&(str=str.substring(0,len-1)),str},$scope.save=function(){if(id){$scope.employeeId?$scope.type.id=$scope.employeeId:$scope.type.id=null,$scope.type.menuScopeIds||($scope.type.menuScopeIds=[$scope.menuId]);var missingValue="";angular.forEach($scope.type.details,function(detail){!detail.mandatory||detail&&""!==detail.value&&"no selection"!==detail.value||(missingValue=missingValue+detail.name+",")}),$scope.resource?$scope.type.resourceId=$scope.resource.id:$scope.type.resourceId||(missingValue+="employee,"),missingValue&&(missingValue=$scope.stripTrailing(missingValue,",")),missingValue?$scope.error="Please provide values for "+missingValue:EmployeeService.save($rootScope.globals.currentUser.access_token,$scope.menuId,id,$scope.type,function(response){response.error_description?($scope.success=null,"Access is denied"!==response.error_description?$scope.error=response.error_description+". Please logout!":$scope.error=response.error_description+". Please contact your administrator."):response.success===!0?($scope.employeeId?$scope.menuId?$location.path("/home").search({id:$scope.menuId,templateId:$scope.id,resourceId:$scope.type.resourceId}):$location.path("/home"):$scope.success="Successfully saved employee, save new employee ?",$scope.error=null,$scope.dataLoading=!1,$scope.reset(!1)):($scope.resourceId||($scope.type.resourceId=null),$scope.success=null,$scope.error=response.message)})}},$scope.reset=function(clear){$scope.error=null,clear&&($scope.success=null),$scope.resourceId?$scope.type.resourceId=$scope.resourceId:($scope.type.resourceId=null,$scope.selected="Select a Employee",$scope.resource=null),angular.forEach($scope.type.details,function(detail){detail.value=null,"GBL_INPUT_DRP_TYPE"===detail.type&&(detail.value="no selection")})},$scope.loadPage(id)}]),angular.module("Home").controller("ModalDeleteEmployeeCtrl",function($scope,$modalInstance,parentScope,HomeService,employee,name,token,typeId,menuId){$scope.name=name,$scope.message="Are you sure you want to delete this record ?",$scope.ok=function(){HomeService.deleteEmployee(token,menuId,employee,function(response){response?response.error_description?$scope.error=response.error_description+". Please logout!":response.success?parentScope.removeEmployeeFromTemplate(typeId,employee):parentScope.removeEmployeeFromTemplate(typeId,employee,response.message):$scope.error="Invalid server response"}),$modalInstance.close()},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}),angular.module("EmployeeLink").controller("EmployeeLinkController",["$scope","$rootScope","$location","EmployeeLinkService",function($scope,$rootScope,$location,EmployeeLinkService){var name=$location.search().name;$scope.id=$location.search().id?$location.search().id:null,$scope.menuId=$location.search().menuId?$location.search().menuId:null,$scope.origin=$location.search().origin?$location.search().origin:null,$scope.employeeId=$location.search().employeeId,$scope.resourceId=$location.search().resourceId,$scope.pagination={},$scope.urlScope={url:"/home",return_parms:null},$scope.sortType="",$scope.sortReverse=!1,$scope.setFilter=function(sortType){$scope.sortType===sortType?($scope.sortReverse=!$scope.sortReverse,$scope.sortType=sortType):($scope.sortReverse=!1,$scope.sortType=sortType)},$scope.initialiseUrlParms=function(){$scope.id?$scope.urlScope.return_parms={id:$scope.menuId,templateId:$scope.id}:$scope.urlScope.return_parms={id:$scope.menuId}},$scope.executeURL=function(){$scope.initialiseUrlParms(),$scope.urlScope.return_parms?$location.path($scope.urlScope.url).search($scope.urlScope.return_parms):$location.path($scope.urlScope.url)},$scope.loadPage=function(){$scope.loading=!0,name?$scope.name="Audit Trail "+name:$scope.name="Employee Audit Trail",$scope.employeeId?$scope.getEmployeeLinksByEmployeeId($scope.employeeId):$scope.allEmployeeLink(),$scope.loading=!1},$scope.getEmployeeLinksByEmployeeId=function(employeeId){EmployeeLinkService.allEmployeeLinksForEmployeeId($rootScope.globals.currentUser.access_token,employeeId,$scope.process)},$scope.allEmployeeLink=function(){EmployeeLinkService.allEmployeeLink($rootScope.globals.currentUser.access_token,$scope.process)},$scope.process=function(response){response?response.error_description?"Access is denied"!==response.error_description&&($scope.error=response.error_description+". Please logout!"):($scope.employeeLinks=response.employeeLinks,$scope.employeeLinks&&($scope.pagination.viewby=10,$scope.pagination.totalItems=$scope.employeeLinks.length,$scope.pagination.currentPage=1,$scope.pagination.itemsPerPage=10,$scope.pagination.maxSize=10)):$scope.error="Invalid server response"},$scope.loadPage()}]),angular.module("EmployeeLink").factory("ApiEmployeeLinkCall",["$http",function($http){var service={};return service.process=function(url,callback){$http.get("../settings.json").success(function(response){$http.post(response.api_url+url).success(function(response){callback(response)}).error(function(response){callback(response)})})},service}]),angular.module("EmployeeLink").factory("EmployeeLinkService",["ApiEmployeeLinkCall",function(ApiEmployeeLinkCall){var service={};return service.allEmployeeLinksForEmployeeId=function(token,id,callback){ApiEmployeeLinkCall.process("link/employee/all/"+id+"/employee?access_token="+token,callback)},service.allEmployeeLink=function(token,callback){ApiEmployeeLinkCall.process("link/employee/all?access_token="+token,callback)},service}]);