"use strict";angular.module("Authentication").factory("ApiAuthenticationCall",["$http","Base64",function($http,Base64){var service={};return service.process=function(url,callback){$http.get("../settings.json").success(function(response){$http({method:"POST",url:response.api_url+url,headers:{"Content-Type":"application/json",Authorization:"Basic "+Base64.encode(response.auth_user+":"+response.auth_psw)}}).success(function(response){callback(response)}).error(function(response){callback(response)})})},service}]),angular.module("Authentication").factory("AuthenticationService",["Base64","$http","$cookieStore","$rootScope","ApiAuthenticationCall",function(Base64,$http,$cookieStore,$rootScope,ApiAuthenticationCall){var service={};return service.Login=function(username,password,callback){ApiAuthenticationCall.process("oauth/token?grant_type=password&username="+username+"&password="+password,callback)},service.SetCredentials=function(username,password,access_token,refresh_token,expires_in){var now=new Date,expiresValue=new Date(now);expiresValue.setSeconds(now.getSeconds()+expires_in),$rootScope.globals={currentUser:{username:username,password:password,access_token:access_token,refresh_token:refresh_token,expires_in:expiresValue.getTime(),authdata:Base64.encode($rootScope.auth_user+":"+$rootScope.auth_psw)}},$cookieStore.put("globals",$rootScope.globals,{expires:expiresValue}),$http.defaults.headers.common.Authorization="Basic "+Base64.encode($rootScope.auth_user+":"+$rootScope.auth_psw)},service.ClearCredentials=function(){$rootScope.globals={},$cookieStore.remove("globals"),$http.defaults.headers.common.Authorization="Basic "},service}]).factory("Base64",function(){var keyStr="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";return{encode:function(input){var chr1,chr2,enc1,enc2,enc3,output="",chr3="",enc4="",i=0;do chr1=input.charCodeAt(i++),chr2=input.charCodeAt(i++),chr3=input.charCodeAt(i++),enc1=chr1>>2,enc2=(3&chr1)<<4|chr2>>4,enc3=(15&chr2)<<2|chr3>>6,enc4=63&chr3,isNaN(chr2)?enc3=enc4=64:isNaN(chr3)&&(enc4=64),output=output+keyStr.charAt(enc1)+keyStr.charAt(enc2)+keyStr.charAt(enc3)+keyStr.charAt(enc4),chr1=chr2=chr3="",enc1=enc2=enc3=enc4="";while(i<input.length);return output},decode:function(input){var chr1,chr2,enc1,enc2,enc3,output="",chr3="",enc4="",i=0,base64test=/[^A-Za-z0-9\+\/\=]/g;base64test.exec(input)&&window.alert("There were invalid base64 characters in the input text.\nValid base64 characters are A-Z, a-z, 0-9, '+', '/',and '='\nExpect errors in decoding."),input=input.replace(/[^A-Za-z0-9\+\/\=]/g,"");do enc1=keyStr.indexOf(input.charAt(i++)),enc2=keyStr.indexOf(input.charAt(i++)),enc3=keyStr.indexOf(input.charAt(i++)),enc4=keyStr.indexOf(input.charAt(i++)),chr1=enc1<<2|enc2>>4,chr2=(15&enc2)<<4|enc3>>2,chr3=(3&enc3)<<6|enc4,output+=String.fromCharCode(chr1),64!=enc3&&(output+=String.fromCharCode(chr2)),64!=enc4&&(output+=String.fromCharCode(chr3)),chr1=chr2=chr3="",enc1=enc2=enc3=enc4="";while(i<input.length);return output}}}),angular.module("Authentication").controller("LoginController",["$scope","$location","AuthenticationService",function($scope,$location,AuthenticationService){AuthenticationService.ClearCredentials(),$scope.login=function(){$scope.dataLoading=!0,AuthenticationService.Login($scope.username,$scope.password,function(response){response.error_description?$scope.error=response.error_description:response.access_token?(AuthenticationService.SetCredentials($scope.username,$scope.password,response.access_token,response.refresh_token,response.expires_in),$location.path("/home")):$scope.error="Invalid server response [102]",$scope.dataLoading=!1})}}]);