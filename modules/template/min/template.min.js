"use strict";angular.module("Type").factory("TypeService",["SettingsCall",function(SettingsCall){var service={};return service.save=function(item,token,callback){SettingsCall.process("type/add?access_token="+token,item,callback)},service.getAllTemplates=function(token,callback){SettingsCall.process("type/all?access_token="+token,null,callback)},service.getFieldTypes=function(token,callback){SettingsCall.process("type/fields?access_token="+token,null,callback)},service.getTemplateTypes=function(token,callback){SettingsCall.process("type/templates?access_token="+token,null,callback)},service.getType=function(token,id,callback){SettingsCall.process("type/get/"+id+"?access_token="+token,null,callback)},service.getTemplateFields=function(token,id,callback){SettingsCall.process("type/template/dropdown/"+id+"/fields?access_token="+token,null,callback)},service.getTemplateDateFields=function(token,id,callback){SettingsCall.process("type/template/date/"+id+"/fields?access_token="+token,null,callback)},service.hidden=function(token,callback){SettingsCall.process("type/hidden/?access_token="+token,null,callback)},service.unhide=function(token,id,callback){SettingsCall.process("type/unhide/"+id+"?access_token="+token,null,callback)},service.delete=function(token,id,callback){service.deleteTemplate(token,id,!0,callback)},service.deleteTemplate=function(token,id,cascade,callback){SettingsCall.process("type/delete/"+id+"?access_token="+token+"&cascade="+cascade,null,callback)},service}]),angular.module("Type").controller("TypeController",["$scope","$rootScope","$location","TypeService","$modal",function($scope,$rootScope,$location,TypeService,$modal){$scope.id=$location.search().id,$scope.new=$location.search().new?$location.search().new:null,$scope.menuId=$location.search().menuId?$location.search().menuId:null,$scope.origin=$location.search().origin?$location.search().origin:null,$scope.selectedItem={name:"nosec",type:"no selection"},$scope.modules=[],$scope.dropdownvalues=[],$scope.drpbutton="Add",$scope.items=[],$scope.drpIndex=null,$scope.type={},$scope.pagination={},$scope.urlScope={url:"/home",return_parms:null},$scope.initialiseUrlParms=function(){$scope.menuId&&("employee"===$scope.origin?$scope.urlScope.return_parms={id:$scope.menuId,templateId:$scope.id}:"asset"===$scope.origin?$scope.urlScope.return_parms={id:$scope.menuId}:$scope.urlScope.return_parms={id:$scope.menuId})},$scope.executeURL=function(){$scope.initialiseUrlParms(),$scope.urlScope.return_parms?$location.path($scope.urlScope.url).search($scope.urlScope.return_parms):$location.path($scope.urlScope.url)},$scope.loadPage=function(){$scope.loading=!0,$scope.loadModules(function(modules){$scope.modules=modules,$scope.loadTemplates(modules)}),TypeService.getFieldTypes($rootScope.globals.currentUser.access_token,$scope.process),$scope.new&&($scope.newCollapse=!0)},$scope.loadModules=function(callback){TypeService.getTemplateTypes($rootScope.globals.currentUser.access_token,function(response){response.error_description?$scope.error=response.error_description+". Please logout!":callback(response.templateTypes)})},$scope.loadTemplates=function(modules){TypeService.getAllTemplates($rootScope.globals.currentUser.access_token,function(response){response?response.error_description?"Access is denied"!==response.error_description&&($scope.error=response.error_description+". Please logout!"):response.types?($scope.templates=response.types,angular.forEach(modules,function(module){angular.forEach($scope.templates,function(template){template.templateType===module.name&&(template.templateType=module.type)})}),$scope.pagination.viewby=10,$scope.pagination.totalItems=response.types.length,$scope.pagination.currentPage=1,$scope.pagination.itemsPerPage=10,$scope.pagination.maxSize=10):$scope.error="Invalid server response":$scope.error="Invalid server response",$scope.loading=!1})},$scope.editTemplate=function(template){$scope.loading=!0,$scope.editvalue=!0,$scope.reset(),$scope.id=template.id,TypeService.getFieldTypes($rootScope.globals.currentUser.access_token,$scope.process),$scope.newCollapse=!0},$scope.process=function(loadpageResponse){loadpageResponse?loadpageResponse.error_description?$scope.error=loadpageResponse.error_description+". Please logout!":loadpageResponse.fieldTypes&&($scope.types=loadpageResponse.fieldTypes,$scope.id&&TypeService.getType($rootScope.globals.currentUser.access_token,$scope.id,function(response){response.type&&($scope.type=response.type,$scope.typename=$scope.type.name,$scope.templateType=$scope.type.templateType,angular.forEach($scope.type.details,function(detail){angular.forEach($scope.types,function(type){detail.type===type.name&&$scope.items.push({id:detail.id,type:type,name:detail.name,unique:detail.unique,display:detail.display,mandatory:detail.mandatory})})}))})):$scope.error="Invalid server response",$scope.loading=!1},$scope.edit=function(index){if($scope.selectedItem=$scope.items[index].type,$scope.dispname=$scope.items[index].name,$scope.unique=$scope.items[index].unique,$scope.mandatory=$scope.items[index].mandatory,$scope.display=$scope.items[index].display,$scope.selectIndex=index,"GBL_INPUT_DRP_TYPE"===$scope.selectedItem.name){var n=$scope.dispname.indexOf(":"),json=$scope.dispname.substring(n+1,$scope.dispname.length),name=$scope.dispname.substring(0,n);$scope.dropdownName=name,$scope.dropdownvalues=JSON.parse(json)}else $scope.dropdownvalues=[],$scope.dropdownName=$scope.items[index].name,$scope.dropdown=null},$scope.moveDrp=function(old_index,new_index){for(;old_index<0;)old_index+=$scope.dropdownvalues.length;for(;new_index<0;)new_index+=$scope.dropdownvalues.length;if(new_index>=this.length)for(var k=new_index-$scope.dropdownvalues.length;k--+1;)$scope.dropdownvalues.push(void 0);$scope.dropdownvalues.splice(new_index,0,$scope.dropdownvalues.splice(old_index,1)[0])},$scope.addDpdValue=function(){if($scope.dropdownName)if($scope.dropdown){var index=$scope.dropdownvalues.indexOf($scope.dropdown),hasValue=parseInt(index)>=0||parseInt(index)!==-1;hasValue?$scope.drpError="No duplicate values allowed in dropdown list":(null==$scope.drpIndex?$scope.dropdownvalues.push($scope.dropdown):$scope.dropdownvalues[$scope.drpIndex]=$scope.dropdown,$scope.drpError=null,$scope.dropdown=null,$scope.drpbutton="Add",$scope.dispname=$scope.dropdownName+":"+JSON.stringify($scope.dropdownvalues),$scope.drpIndex=null)}else $scope.drpError="Please give a value for your dropdown list";else $scope.drpError="Please give a name for your dropdown"},$scope.removeDrp=function(index){$scope.dropdownName?($scope.dropdownvalues.splice(index,1),$scope.dispname=$scope.dropdownName+":"+JSON.stringify($scope.dropdownvalues)):$scope.drpError="Please give a name for your dropdown"},$scope.editDrp=function(index){$scope.drpIndex=index,$scope.dropdown=$scope.dropdownvalues[index],$scope.drpbutton="Update"},$scope.dropboxitemselected=function(item){$scope.selectedItem=item},$scope.add=function(){"nosec"!==$scope.selectedItem.name&&$scope.dispname&&""!==$scope.dispname.trim()&&("GBL_INPUT_DRP_TYPE"===$scope.selectedItem.name&&($scope.dispname=$scope.dropdownName+":"+JSON.stringify($scope.dropdownvalues)),null!=$scope.selectIndex?($scope.items[$scope.selectIndex].type=$scope.selectedItem,$scope.items[$scope.selectIndex].name=$scope.dispname,$scope.items[$scope.selectIndex].unique=$scope.unique,$scope.items[$scope.selectIndex].mandatory=$scope.mandatory,$scope.items[$scope.selectIndex].display=$scope.display):$scope.items.push({type:$scope.selectedItem,name:$scope.dispname,unique:$scope.unique,mandatory:$scope.mandatory,display:$scope.display}),$scope.dropdownvalues=[],$scope.dropdownName=null,$scope.dropdown=null,$scope.dispname="",$scope.selectIndex=null,$scope.unique=!1,$scope.mandatory=!1,$scope.display=!1,$scope.selectedItem={name:"nosec",type:"no selection"})},$scope.remove=function(index){var item=$scope.items[index];$scope.items.splice($scope.items.indexOf(item),1)},$scope.move=function(old_index,new_index){for(;old_index<0;)old_index+=$scope.items.length;for(;new_index<0;)new_index+=$scope.items.length;if(new_index>=this.length)for(var k=new_index-$scope.items.length;k--+1;)$scope.items.push(void 0);$scope.items.splice(new_index,0,$scope.items.splice(old_index,1)[0])},$scope.cancel=function(){$scope.selectIndex=null,$scope.dispname="",$scope.templateType=null,$scope.unique=!1,$scope.display=!1,$scope.mandatory=!1,$scope.dropdownvalues=[],$scope.dropdownName=null,$scope.dropdown=null,$scope.drpbutton="Add",$scope.selectedItem={name:"nosec",type:"no selection"}},$scope.reset=function(messages){$scope.type={},$scope.items=[],$scope.typename="",$scope.dispname="",$scope.templateType=null,$scope.unique=!1,$scope.display=!1,$scope.mandatory=!1,$scope.dropdownvalues=[],$scope.dropdownName=null,$scope.dropdown=null,messages&&($scope.success=null,$scope.error=null),$scope.selectedItem={name:"nosec",type:"no selection"}},$scope.submit=function(){$scope.templateType?$scope.items.length>0?($scope.type?($scope.type.details=[],$scope.type.name=$scope.typename,$scope.type.templateType=$scope.templateType):$scope.type={details:[],name:$scope.typename,templateType:$scope.templateType},angular.forEach($scope.items,function(value){value.id?$scope.type.details.push({id:value.id,type:value.type.name,name:value.name,unique:value.unique,mandatory:value.mandatory,display:value.display}):$scope.type.details.push({type:value.type.name,name:value.name,unique:value.unique,mandatory:value.mandatory,display:value.display})}),TypeService.save($scope.type,$rootScope.globals.currentUser.access_token,function(response){response.error_description?($scope.success=null,$scope.error=response.error_description+". Please logout!"):response.success?$scope.editvalue?($scope.newCollapse=!1,$scope.success="Successfully updated template!",$scope.error=null,$scope.dataLoading=!1,$scope.id=null,$scope.reset()):($scope.id?$scope.executeURL():($scope.success="Successfully saved a new template, create new type ?",$scope.loadTemplates()),$scope.error=null,$scope.dataLoading=!1,$scope.reset()):($scope.success=null,$scope.error=response.message)})):($scope.success=null,$scope.error="no template type fields provided"):($scope.success=null,$scope.error="no module selected for this template")},$scope.isEven=function(value){return value%2===0?"":"active"},$scope.isOkOrRemove=function(unique){return unique?"glyphicon glyphicon-ok":"glyphicon glyphicon-remove"},$scope.isExpanded=function(){return $scope.newCollapse?"glyphicon glyphicon-collapse-up":"glyphicon glyphicon-collapse-down"},$scope.removeTemplate=function(type){$modal.open({backdrop:!0,templateUrl:"../modules/template/type/templates/deletetype.html",controller:"ModalDeleteTypeCtrl",resolve:{parentScope:function(){return $scope},type:function(){return type},token:function(){return $rootScope.globals.currentUser.access_token}}})},$scope.deleteTemplate=function(id,cascade,token,callback){id&&TypeService.deleteTemplate(token,id,cascade,function(response){response.error_description?$scope.error=response.error_description+". Please logout!":callback()})},$scope.loadPage()}]),angular.module("Type").controller("ModalDeleteTypeCtrl",function($scope,$modalInstance,parentScope,type,token){$scope.name=type.name,$scope.cascade=!1,$scope.ok=function(){$scope.dataLoading=!0,parentScope.deleteTemplate(type.id,$scope.cascade,token,function(){parentScope.loadPage(),$modalInstance.close()})},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}),angular.module("Template").controller("TemplateController",["$scope","$rootScope","TypeService","$modal","$location",function($scope,$rootScope,TypeService,$modal,$location){$scope.menuId=$location.search().menuId?$location.search().menuId:null,$scope.pagination={},$scope.loadPage=function(){$scope.loading=!0,TypeService.hidden($rootScope.globals.currentUser.access_token,function(response){response?response.error_description?"Access is denied"!==response.error_description&&($scope.error=response.error_description+". Please logout!"):response.types?($scope.types=response.types,$scope.pagination.viewby=5,$scope.pagination.totalItems=response.types.length,$scope.pagination.currentPage=1,$scope.pagination.itemsPerPage=5,$scope.pagination.maxSize=5):$scope.error="Invalid server response":$scope.error="Invalid server response",$scope.loading=!1})},$scope.isEven=function(value){return value%2===0?"":"active"},$scope.deleteTemplete=function(type){$modal.open({backdrop:!0,templateUrl:"../modules/template/hidden/templates/deletetemplate.html",controller:"ModalDeleteTemplateCtrl",resolve:{parentScope:function(){return $scope},type:function(){return type}}})},$scope.unhideTemplate=function(type){$modal.open({backdrop:!0,templateUrl:"../modules/template/hidden/templates/unhidetemplate.html",controller:"ModalUnhideTemplateCtrl",resolve:{parentScope:function(){return $scope},type:function(){return type}}})},$scope.unhide=function(type,callback){TypeService.unhide($rootScope.globals.currentUser.access_token,type.id,function(response){response.success?callback(response.success,response.message):response.error_description&&($scope.error=response.error_description+". Please logout!")})},$scope.delete=function(type,callback){TypeService.delete($rootScope.globals.currentUser.access_token,type.id,function(response){response.success?callback(response.success,response.message):response.error_description&&($scope.error=response.error_description+". Please logout!")})},$scope.loadPage()}]),angular.module("Template").controller("ModalDeleteTemplateCtrl",function($scope,$modalInstance,parentScope,type){$scope.name=type.name,$scope.accept=!1,$scope.errorMessage=!1,$scope.message="",$scope.ok=function(){$scope.errorMessage=!1,$scope.dataLoading=!0,parentScope.delete(type,function(success,message){success?($modalInstance.close(),parentScope.loadPage()):$scope.error=message})},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}),angular.module("Template").controller("ModalUnhideTemplateCtrl",function($scope,$modalInstance,parentScope,type){$scope.name=type.name,$scope.accept=!1,$scope.errorMessage=!1,$scope.message="",$scope.ok=function(){$scope.errorMessage=!1,$scope.dataLoading=!0,parentScope.unhide(type,function(success,message){success?($modalInstance.close(),parentScope.loadPage()):$scope.error=message})},$scope.cancel=function(){$modalInstance.dismiss("cancel")}});