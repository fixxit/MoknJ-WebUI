"use strict";angular.module("User").factory("UserService",["SettingsCall","MenuService",function(SettingsCall,MenuService){var service={};return service.getAllMenus=function(token,callback){MenuService.getAllMenus(token,callback)},service.addAccess=function(token,id,acccess,callback){SettingsCall.process("resource/add/"+id+"/accesss?access_token="+token,acccess,callback)},service.getAccessList=function(token,id,callback){SettingsCall.process("resource/get/"+id+"/accesss?access_token="+token,null,callback)},service.allRights=function(token,callback){SettingsCall.process("resource/all/rights?access_token="+token,null,callback)},service.get=function(token,id,callback){SettingsCall.process("resource/get/"+id+"?access_token="+token,null,callback)},service.save=function(token,data,callback){SettingsCall.process("resource/add/?access_token="+token,data,callback)},service.authorities=function(token,callback){SettingsCall.process("resource/authorities?access_token="+token,null,callback)},service.all=function(token,callback){SettingsCall.process("resource/get/all/?access_token="+token,null,callback)},service.remove=function(token,id,callback){SettingsCall.process("resource/delete/"+id+"?access_token="+token,null,callback)},service}]),angular.module("User").controller("UserController",["$scope","$rootScope","$location","UserService","$modal",function($scope,$rootScope,$location,UserService,$modal){$scope.menuId=$location.search().menuId?$location.search().menuId:null,$scope.isCollapsed=!1,$scope.containerCollapsed=!1,$scope.resourceId=$location.search().resourceId,$scope.resource={},$scope.pagination={},$scope.access=[{id:"",name:"",rights:[{enumName:"",displayName:"",value:""}],templates:[{id:"",name:"",rights:[{enumName:"",displayName:"",value:""}]}]}],$scope.resourceId&&($scope.resource.id=$scope.resourceId),$scope.loadPage=function(id){$scope.loading=!0,id&&$scope.editResource(id),$scope.getAuthorities(),$scope.getMenus(),UserService.all($rootScope.globals.currentUser.access_token,function(response){response?response.error_description?"Access is denied"!==response.error_description&&($scope.error=response.error_description+". Please logout!"):response.resources?($scope.resources=response.resources,$scope.pagination.viewby=10,$scope.pagination.totalItems=response.resources.length,$scope.pagination.currentPage=1,$scope.pagination.itemsPerPage=10,$scope.pagination.maxSize=10):$scope.error="Invalid server response":$scope.error="Invalid server response",$scope.loading=!1})},$scope.save=function(){$scope.dataLoading=!0,$scope.resource.authorities=[],angular.forEach($scope.authorities,function(auth){auth.value&&$scope.resource.authorities.push(auth.name)}),$scope.resource.systemUser||($scope.resource.userName=null,$scope.resource.password=null,$scope.resource.authorities=[]),UserService.save($rootScope.globals.currentUser.access_token,$scope.resource,function(response){response.error_description?($scope.success=null,"Access is denied"!==response.error_description?$scope.error=response.error_description+". Please logout!":$scope.error=response.error_description+". Please contact your administrator."):response.success===!0?($scope.resourceId?$scope.success="Successfully update employee":$scope.success="Successfully saved a new employee",$scope.addAccess(response.resource.id),$scope.loadPage(),$scope.reset(),$scope.resourceId=null):($scope.success=null,$scope.error=response.message),$scope.dataLoading=!1})},$scope.rescanAccess=function(){if($scope.access){var maxMenuCount=$scope.access.length;angular.forEach($scope.rights,function(search_right){var rightsCount=0;angular.forEach($scope.access,function(menu){if(menu.templates){var maxTemplateCount=menu.templates.length,templateCount=0;angular.forEach(menu.templates,function(template){angular.forEach(template.rights,function(page_right){search_right.enumName===page_right.enumName&&page_right.value&&(templateCount+=1)})}),maxTemplateCount===templateCount?(angular.forEach(menu.rights,function(page_right){search_right.enumName===page_right.enumName&&(page_right.value=!0)}),rightsCount+=1):angular.forEach(menu.rights,function(page_right){search_right.enumName===page_right.enumName&&(page_right.value=!1)})}}),maxMenuCount===rightsCount?search_right.value=!0:search_right.value=!1})}},$scope.addAllForMenu=function(enumName){if($scope.access){var value=!1;$scope.rights&&angular.forEach($scope.rights,function(page_right){enumName===page_right.enumName&&(value=page_right.value)}),angular.forEach($scope.access,function(menu){angular.forEach(menu.rights,function(page_right){enumName===page_right.enumName&&(page_right.value=value)}),menu.templates&&angular.forEach(menu.templates,function(template){angular.forEach(template.rights,function(page_right){enumName===page_right.enumName&&(page_right.value=value)})})})}},$scope.addAllForTemplate=function(menuId,enumName){$scope.access&&(angular.forEach($scope.access,function(menu){if(menu.id===menuId){var value=!1;angular.forEach(menu.rights,function(page_right){enumName===page_right.enumName&&(value=page_right.value)}),menu.templates&&angular.forEach(menu.templates,function(template){angular.forEach(template.rights,function(page_right){enumName===page_right.enumName&&(page_right.value=value)})})}}),$scope.rescanAccess())},$scope.generateAccessArray=function(menus,rights){if(menus){var accMenus=[];angular.forEach(menus,function(menu){var accMenu={};if(accMenu.id=menu.id,accMenu.name=menu.name,accMenu.rights=[],angular.forEach(rights,function(right){var accRight={};accRight.displayName=right.displayName,accRight.enumName=right.enumName,accRight.value=!1,accMenu.rights.push(accRight)}),accMenu.templates=[],menu.templates){var accTemps=[];angular.forEach(menu.templates,function(template){var accTemp={};accTemp.id=template.id,accTemp.name=template.name;var accRights=[];angular.forEach(rights,function(right){var accRight={};accRight.displayName=right.displayName,accRight.enumName=right.enumName,accRight.value=!1,accRights.push(accRight)}),accTemp.rights=accRights,accTemps.push(accTemp)}),accMenu.templates=accTemps}accMenus.push(accMenu)}),$scope.access=accMenus}},$scope.addAccess=function(userId){var accessRules=[];angular.forEach($scope.access,function(menu){menu.templates&&angular.forEach(menu.templates,function(template){var access={menuId:menu.id,templateId:template.id,userId:userId,rights:[]};angular.forEach(template.rights,function(right){right.value&&access.rights.push(right.enumName)}),access.rights.length>0&&accessRules.push(access)})}),UserService.addAccess($rootScope.globals.currentUser.access_token,userId,accessRules,function(response){response.error_description?($scope.success=null,$scope.error=response.error_description+". Please contact your administrator."):($scope.error=null,$scope.success=response.error_description)})},$scope.populateAccessList=function(access){$scope.access&&angular.forEach($scope.access,function(menu){var menuId=menu.id;menuId===access.menuId&&menu.templates&&angular.forEach(menu.templates,function(template){var templateId=template.id;templateId===access.templateId&&angular.forEach(template.rights,function(page_right){angular.forEach(access.rights,function(acc_right){acc_right===page_right.enumName&&(page_right.value=!0)})})})})},$scope.getAccessList=function(id){UserService.getAccessList($rootScope.globals.currentUser.access_token,id,function(response){response.error_description?($scope.success=null,"Access is denied"!==response.error_description&&($scope.error=response.error_description)):response.accessRules&&(angular.forEach(response.accessRules,function(access){$scope.populateAccessList(access)}),$scope.rescanAccess())})},$scope.isEven=function(value){return value%2===0?"":"active"},$scope.isSystemUser=function(value){return value?"glyphicon glyphicon-ok":"glyphicon glyphicon-remove"},$scope.isCollapsedClass=function(newCollapse){return newCollapse?"glyphicon glyphicon-collapse-up":"glyphicon glyphicon-expand"},$scope.reset=function(messages){$scope.resource={},messages&&($scope.success=null,$scope.error=null),angular.forEach($scope.authorities,function(auth){auth.value=!1}),$scope.getMenus()},$scope.cancel=function(){$scope.resourceId=null,$scope.reset(),$scope.success=null,$scope.error=null,$scope.getMenus()},$scope.deletResource=function(resource,callback){UserService.remove($rootScope.globals.currentUser.access_token,resource.id,function(response){response.error_description?callback(!1,response.error_description):callback(!0)})},$scope.editResource=function(id){$scope.rights&&$scope.menus&&$scope.generateAccessArray($scope.menus,$scope.rights),$scope.resourceId=id,UserService.get($rootScope.globals.currentUser.access_token,id,function(response){response.error_description?($scope.success=null,$scope.error=response.error_description):($scope.resource=response.resource,angular.forEach($scope.authorities,function(auth){var value=!1;angular.forEach($scope.resource.authorities,function(resAuth){resAuth===auth.name&&(value=!0)}),auth.value=value}),$scope.getAccessList(id),$scope.newCollapse=!0)})},$scope.getMenus=function(){UserService.getAllMenus($rootScope.globals.currentUser.access_token,function(response){response.error_description?($scope.success=null,"Access is denied"!==response.error_description&&($scope.error=response.error_description)):response.menus&&($scope.menus=response.menus,$scope.getRights($scope.menus))})},$scope.getRights=function(menus){UserService.allRights($rootScope.globals.currentUser.access_token,function(response){response.error_description?($scope.success=null,"Access is denied"!==response.error_description&&($scope.error=response.error_description)):response.rights&&($scope.rights=response.rights,$scope.generateAccessArray(menus,$scope.rights))})},$scope.getAuthorities=function(){UserService.authorities($rootScope.globals.currentUser.access_token,function(response){response.error_description?($scope.success=null,"Access is denied"!==response.error_description&&($scope.error=response.error_description)):response.authorities&&($scope.authorities=[],angular.forEach(response.authorities,function(auth){auth&&$scope.authorities.push({name:auth,value:{}})}))})},$scope.removeResource=function(resource){$modal.open({backdrop:!0,templateUrl:"../modules/user/templates/deleteuser.html",controller:"ModalDeleteResourceCtrl",resolve:{parentScope:function(){return $scope},resource:function(){return resource}}})},$scope.removeFromList=function(resource){var index=$scope.resources.indexOf(resource);$scope.resources.splice(index,1)},$scope.loadPage($scope.resourceId)}]),angular.module("User").controller("ModalDeleteResourceCtrl",function($scope,$modalInstance,parentScope,resource){$scope.name=resource.firstName+" "+resource.surname,$scope.accept=!1,$scope.errorMessage=!1,$scope.message="",$scope.ok=function(){$scope.errorMessage=!1,$scope.dataLoading=!0,parentScope.deletResource(resource,function(success,message){success?(parentScope.removeFromList(resource),$modalInstance.close()):($scope.errorMessage=!0,$scope.message=message)})},$scope.cancel=function(){$modalInstance.dismiss("cancel")}}),angular.module("User").filter("filterMultiple",["$filter",function($filter){return function(items,values,pagination){if(values&&Array===values.constructor){var results=items;angular.forEach(values,function(value){value&&items&&Array===items.constructor&&(results=$filter("filter")(results,value))}),items&&Array===items.constructor&&values&&Array===values.constructor&&(pagination.searchSize=results.length,items=results.slice((pagination.currentPage-1)*pagination.itemsPerPage,pagination.currentPage*pagination.itemsPerPage))}return items}}]);